<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 配置Handler -->
	<bean id="ItemsController1" name="/queryItems0.action" class="gao.ssm.controller.ItemsController1"></bean>
	<!-- 配置另外一个Handler -->
	<bean id="ItemsController2" class="gao.ssm.controller.ItemsController2"></bean>
	
	<!-- 对于注解的Handler可以单独配置，在实际开发中建议使用组件扫描 -->
	<!-- <bean class="gao.ssm.controller.ItemsController3"></bean> -->
	<!-- 可以扫描controller、service、......
	这里扫描controller，指定controller的包
	 -->
	<context:component-scan base-package="gao.ssm.controller"></context:component-scan>
	
	<!-- 处理器映射器（非注解）
	将bean的name作为url进行查找，需要在配置handler时指定beanname（就是url）
	所有的映射器都实现了HandlerMapping接口
	 -->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
	
	<!-- 另一种处理器映射方式，简单url映射（将url和handler集中进行配置，非注解），多个映射器可以共存 -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<!-- 对ItemsController1进行url映射，url是/queryItems1.action -->
				<prop key="/queryItems1.action">ItemsController1</prop>
				<!-- 对同一个ItemsController1配置不同的url -->
				<prop key="/queryItems2.action">ItemsController1</prop>
				<prop key="/queryItems3.action">ItemsController2</prop>
			</props>
		</property>
	</bean>
	
	<!--注解的映射器 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<!--注解的适配器 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
	<!-- 使用mvc:annotation-driven可以代替上边的注解映射器和注解适配器配置
	mvc:annotation-driven默认还加载了很多参数绑定的方法，比如json转换解析器就默认加载
	使用mvc:annotation-driven就不用配置RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven（因为加载的还有很多其他绑定参数）
	 -->
	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->
	
	<!-- 处理器适配器（非注解）
	所有的处理器适配器都实现了HandlerAdapter接口
	 -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
	
	<!-- 另一种处理器适配器（非注解） -->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"/>
	
	
	<!-- 视图解析器
	解析jsp，默认使用jstl标签，classpath下需要有jstl的包
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>

</beans>